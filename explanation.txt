
Why Our Interpretation is More Efficiant: 


To code our remake of the factorial function our group first looked at the assembly code of the factorial_inefficient function that was waready given. We tried to think of ways in which we could streamline the function to include less registers and thus less memory. However, after a class discussion we decided to simply code the assembly function from scratch and start our own file. 

Our goal was to 



A lil Notas: 
.global f 

factorial

bx lr r0 
we know we wanta multiply command (mul) 
know we wanna store all of that in r0 
take from r1 and r2 

mul r0, r1, r2

where is input number stored? 
first input parameter is inside register 

use a loop while(counter>1) 
	result = result*counter 

will use subtract command to figure out what next thing we multiply is 
